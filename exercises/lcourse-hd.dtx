% \iffalse
% File: lcourse-hd.dtx, a small class for typesetting exercises.
%<*internal>
\iffalse
%</internal>
%<*readme>
# This is a XeLaTeX class to produce woking sheets for a course on LaTeX.

## Files
There are three types of files important: the class file (as documente tex, dtx), the exercises and the solution files. All three are needed to typeset a sheet with solutions. Sheets are also typesettable without solutions.

## How to Compile
Use XeLaTeX format to compile the source file lcourse-hd.dtx. The resulting pdf is the documentation, the cls file is the class needed to typeset exercises. If class option [solution] is set in a document the corresponding file "filename-solutions.tex" is needed to compile the document.
%</readme>
%<*internal>
\fi
\begingroup
%</internal>
%<*batchfile>
\input docstrip.tex
\keepsilent
\preamble
EXPERIMENTAL CODE

Do not distribute this file without also distributing the
source files specified above.

Do not distribute a modified version of this file under the same name.
\endpreamble
\postamble
Copyright 2008–2010 Arno Trautmann <arno.trautmann@gmx.de>

Distributed under the LaTeX Project Public License,
verson 1.3c or higher (your choice). The latest version of
this license is at: http://www.latex-project.org/lppl.txt

This work is "author-maintained" by Arno Trautmann

This work conists of this file lcourse-hd.dtx
         and the derived files lcourse-hd.cls
                               lcourse-hd.pdf
                           and readme.markdown
\endpostamble
\askforoverwritefalse

\generate{\file{lcourse-hd.cls}{\from{lcourse-hd.dtx}{class}}}
%</batchfile>
%<batchfile>\endbatchfile
%<*internal>
\generate{\file{lcourse-hd.ins}{\from{lcourse-hd.dtx}{batchfile}}}
\nopostamble
\nopreamble
\generate{\file{readme.markdown}{\from{lcourse-hd.dtx}{readme}}}
\endgroup
%</internal>
%
%<*driver>
\documentclass[]{gmdocc}
\usepackage[english]{polyglossia}
\usepackage{
  ifxetex,
  hyperref,
  xltxtra
}

\hypersetup{%
  pdfborder= 0 0 0,
  colorlinks=true,
  linkcolor= blue,
  pdftitle=lcourse-hd
}

\title{The \textsf{lcourse-hd} class}
\author{Arno L. Trautmann\thanks{arno.trautmann@gmx.de}}
\date{\today}
\setmainfont[Ligatures={Common,Rare}]{Linux Libertine}

\def\marginpartt{\scriptsize\ttfamily}

\begin{document}

\maketitle
\begin{abstract}
A small class to build working sheets for the tutorial of the course on LaTeX\ in Heidelberg, 2009 and 2010. The course is held by the author.
\end{abstract}

\tableofcontents

\newpage
\newcommand\alert[1]{\textcolor{red}{#1}}
\section{Usage}
\alert{Important:} \emph{Two} files are needed in order to typeset the full sheet including \alert{exercises} and \alert{solutions}. This has to be split as the source code of the exercises will be put on github. Would be pointless to put the solutions there, too. So the latter has to stay local until the sample solution is to be published.
\subsection{Document Header}
To typeset a sheet, use the following header in the main file (say, |exercises1.tex|):
\begin{verbatim}
\documentclass[
  blatt=5,
  ausgabe=heute,
  rückgabe=morgen
]{lcourse-hd}
\end{verbatim}
If any key is not given, a special default value will show up in the pdf. There won’t be an error when compiling with missing keys!

\subsection{Exercises}
Each exercise (also in the main file!) needs: 
\begin{itemize}
\item special keyword (mandatory argument)
\item a name (key-value)
\item a score (key-value)
\item an order for how to hand in the solution (key-value)
\end{itemize}
\begin{verbatim}
\begin{exercise}[
  name=Minimales \TeX-Dokument,
  punkte=5,
  abgabe=Quelltext per Mail{,} fertiges Dokument als Ausdruck.
]{minimaltex}

exercise text

\subexercise[5]{First}
do this
\subexercise[5]{Then}
do this
\end{exercise}
\end{verbatim}
As one can see, commas have to be grouped by \verb|{}|. Else they would be regarded as key seperators. The keyword is important to find the solution belonging to the exercise. The exercises can be parted into several subexercises, the optional argument of which shows the scores for each of them.

\subsection{Solutions}
One needs a second file to write down the solutions. The name of this file must be the name of the exercises-file plus |-solutions|, say |exercise1-solutions.tex|. Every solution starts with |\startsolution{key}| where |key| corresponds to the one given to the exercise. End a solution with |\stopsolution|. |\begin \end| was not possible here as it is quite some hackery to tell \TeX\ to work with \LaTeX s environment this way.

\StopEventually{}
\clearpage

\section{Implementation}

\DocInput{lcourse-hd.dtx}
\end{document}
%</driver>
%<*class>
% \fi

%\subsection{Page layout}
%First, we define some keys for the layout – so we need |xkeyval|. Options are the number of the sheet etc. and whether the solutions should be printed or not.
%    \begin{macrocode}
\RequirePackage{
  xkeyval
}
% default values
\def\ausgabe{option \texttt{ausgabe=X} needed}
\def\rückgabe{option \texttt{rückgabe=X} needed}
\def\blattnummer{00}

\newif\ifsolution
\DeclareOptionX{ausgabe}{\def\ausgabe{#1}}
\DeclareOptionX{rückgabe}{\def\rückgabe{#1}}
\DeclareOptionX{blatt}{\def\blattnummer{#1}}
\DeclareOptionX{solution}{\solutiontrue}
\ProcessOptionsX
%    \end{macrocode}
% We use |scrartcl| for the layout, |scrpage2| for headings and footers.
%    \begin{macrocode}
\LoadClass[headinclude,ngerman]{scrartcl}
\RequirePackage{
  amsmath,
  geometry,
  hyperref,
  marginnote,
  moreverb,
  shortvrb,
  showexpl,
  totpages,
  xltxtra,
  ellipsis
}
\RequirePackage[ngerman]{babel}
\RequirePackage[svgnames]{xcolor}
\RequirePackage[ilines]{scrpage2}

\geometry{top = 4cm,bottom = 3cm}
\hypersetup{
  colorlinks=true,
  linkcolor=blue,
  urlcolor=blue
}
\frenchspacing
\reversemarginpar

\setheadtopline{2pt}
\setheadsepline[text]{.7pt}
\setfootsepline{.7pt}

\ihead{\fontspec{Linux Libertine} \rm Einführung in das\\ Textsatzsystem \LaTeX}
\chead{\fontspec{Linux Libertine} Übungsblatt \blattnummer}
\ohead{\fontspec{Linux Libertine} {\rm Ausgegeben:} \ausgabe\\ {\rm Abgabe:} \rückgabe}
\ofoot{Seite \thepage /\ref{TotPages}}
\cfoot{}
\ifoot{\rm Heidelberg, Sommersemester 2010}

\pagestyle{scrheadings}
\setmainfont[Ligatures={Rare,Common}]{Linux Libertine}

\AtBeginDocument{
  \MakeShortVerb{|}\vspace*{-8mm}\setcounter{section}{\blattnummer}
%    \end{macrocode}
% Setup for the \LaTeX-code in the solutions:
%    \begin{macrocode}
  \lstset{%
    backgroundcolor=\color[rgb]{.9 .9 .9},
    basicstyle=\ttfamily\small,
    breakindent=0em,
    breaklines=true,
    commentstyle=,
    keywordstyle=,
    identifierstyle=,
    captionpos=b,
    numbers=none,
    frame=tlbr,%shadowbox,
    pos=r,
    rframe={single},
    explpreset={numbers=none}
  }
}
%    \end{macrocode}
% \subsection{Macros}
% Two macros for some ”global“ layout: |\title| and |\header|. They will offer a way to give a title to the sheet or to write down special notes (something like ”everybody has to do this sheet, no group work allowed this time“).
% \begin{macrocode}
\renewcommand\title[1]{%
  \AtBeginDocument{\vspace*{4ex}\centerline%
    {\bfseries\huge#1}%
  }
}
\newcommand\header[1]{%
  \AtBeginDocument{\vspace*{3ex}\centerline%
    {\parbox{.85\textwidth}{#1}}%
  }
}
% \end{macrocode}
% Environment definitions for printing the exercises. We count the number of exercises for each sheet. So they will be numbered like 1.1, 1.2 for the first sheet, 2.1, 2.2 for the second and so on. This is not a nice solution, but the only one that works with the standard |\ref| commands.
%    \begin{macrocode}
\newcounter{excount}
\setcounter{excount}{1}

\define@key{exercise}{abgabe}[keine Abgabe erforderlich]{\def\abgabe{#1}}
\define@key{exercise}{punkte}[0]{\def\punkte{#1}}
\define@key{exercise}{name}[Namenlose Übung]{\def\übungsname{#1}}

\renewcommand*{\othersectionlevelsformat}[3]{Übung \blattnummer.\theexcount:\enskip}
%    \end{macrocode}
% \subsection{Environments}
% \subsubsection{Exercise}
%    \begin{macrocode}
\newenvironment{exercise}[2][]
{
  \setkeys{exercise}{#1}
  \def\exkey{#2}  %% to find the corresponding solution
  \subsection{\übungsname \hfill \punkte\ Punkte}
  \label{ex:\jobname}
  \begin{minipage}{1.0\textwidth} 
}
{
  \end{minipage}\stepcounter{excount}\bigskip\par
  \textit{Abgabe:} \abgabe\par\bigskip
%    \end{macrocode}
% Now, input the file with solutions and hope to find one corresponding to this exercise, using the |\exkey| defd above. |\stopsolution| is needed below when throwing away solutions that don’t fit to the exercise calling.
%    \begin{macrocode}
  \let\stopsolution\fi
  \ifsolution \input{\jobname-solutions}\fi
}
% \end{macrocode}
% Finally, the subexercise is defined:
% \begin{macrocode}
\newcommand\subexercise[2][]{
  \subsubsection*{#2\hfill #1}
}
%    \end{macrocode}
% \subsubsection{Expertexercise}
% There will be some extra exercises for the \TeX{}perts. Here is their environment, with the well-known ”dangerous bend“-sign of the \TeX{}book:
%    \begin{macrocode}
\font\manual=manfnt at 14pt
\reversemarginpar
\newenvironment{expertexercise}[2][]
{
  \begin{exercise}[#1,punkte=\normalfont \itshape keine]{#2}
  \vspace*{-.8cm}
  \marginnote{\quad\manual\char127}
  \vspace*{.8cm}
}
{
  \end{exercise}
}
%    \end{macrocode}
% \subsubsection{Solution}
% Finally, the solutions to the exercises:
% This is a bit tricky: There are two files for the exercises, one with the exercise texts, one with the solutions. Now every exercise needs its solution printed directly behind it, but \emph{only} if class option |solution| is given. That is managed above when |\input|ting the solutions.
% 
% Now, there are different solutions in that file. To find the only one matching the key, every solution has a key, too. If they don’t fit, an |\iffalse| is started. That will be ended by |\stopsolution| which is |\let| to |\fi| above. If the keys fit, an environment for the solution will be started and |\stopsolution| is turned into ending that environment and stopping the input. This is a great improvement in performance, of course!
% \begin{macrocode}
\newcommand\startsolution[1]{%
  \ifthenelse%
    {\equal{#1}{\exkey}}
    {\def\stopsolution{\end{solutionenv}\endinput} \begin{solutionenv}}
    {\iffalse}
}
% \end{macrocode}
% The environment for the solutions:
% \begin{macrocode}
\newenvironment{solutionenv}
{\subsection*{Lösung:}\begin{minipage}{\textwidth}}
{\end{minipage}}
% \end{macrocode}
% And markup for the subexercises. It is not always necessary or meaningfull to provide subsolutions to every subexercise, but in most cases it will be. This is just analogue to the subexercise; however, the scores are not given here again. So only one mandatory argument.
% \begin{macrocode}
\newcommand\subsolution[1]{
  \subsubsection*{#1\hfill}
}
% \end{macrocode}
% \subsection{Miscellaneous}
% Some markup for easy typesetting:
% \begin{macrocode}
\def\lcode{\bigskip\\\boxedverbatim}
\def\endlcode{\endboxedverbatim\bigskip\\}
\def\pkg#1{\textsf{#1}}
% \end{macrocode}
% The |itemize|-hack from the |alttex|-package, a bit shortened for stability:
%    \begin{macrocode}
\def\outside{o}
\def\inside{i}
\let\insideitemizei\outside
\let\insideitemizeii\outside
\def\altenditemize{
  \if\altlastitem 1%
    \let\altlastitem0%
  \else%
    \end{itemize}%
    \let\insideitemizei\outside%
  \fi%
}

\begingroup
  \lccode`\~=`\^^M%
\lowercase{%
  \endgroup
  \def\makeenteractive{%
    \catcode`\^^M=\active
    \let~\altenditemize
}%
}

\catcode`\•13
\def•{%
  \ifx\insideitemizei\inside%
    \let\altlastitem1%
    \expandafter\item%
  \else%
    \begin{itemize}%
    \let\insideitemizei\inside%
    \let\altlastitem1%
    \makeenteractive%
    \expandafter\item%
  \fi
}
%    \end{macrocode}
% \Finale
\endinput